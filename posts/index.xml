<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on JDHeyburn</title><link>https://jdheyburn.co.uk/posts/</link><description>Recent content in Posts on JDHeyburn</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 09 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://jdheyburn.co.uk/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Who Goes Blogging Pt. 1: Getting Started</title><link>https://jdheyburn.co.uk/posts/who-goes-blogging-1-getting-started/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/posts/who-goes-blogging-1-getting-started/</guid><description>I&amp;rsquo;ve done a lot of talking about how this website is currently, but let&amp;rsquo;s talk about how you can get set up with the same as I have done here. Let&amp;rsquo;s recap exactly what that is:
A GitHub repo with the site source code Another GitHub project with the rendered site Hosted on GitHub Pages Fronted by a custom domain Globally cached by a CDN Redirecting multiple domains We&amp;rsquo;ll cover the first three points in this post, with the remainder to come in a follow up post.</description></item><item><title>Who Goes Blogging Pt. 0: Applying Cartography</title><link>https://jdheyburn.co.uk/posts/who-goes-blogging-0-applying-cartography/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/posts/who-goes-blogging-0-applying-cartography/</guid><description>Applying Cartography With my academic background focused in infrastructure, I love seeing diagrams of topologies - they&amp;rsquo;re a pretty damn useful way of understanding architecture of an application flow amongst other things. Let&amp;rsquo;s take a look at how my portfolio site is architected out.
As I mentioned in my first blog post - I&amp;rsquo;ve got several ideas on how I can improve on the architecture of this site. But what good is evaluating where you&amp;rsquo;ve come from if you don&amp;rsquo;t document what you currently have?</description></item><item><title>Three Ways To Spice Up Your Python Code</title><link>https://jdheyburn.co.uk/posts/three-ways-to-spice-up-your-python-code/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/posts/three-ways-to-spice-up-your-python-code/</guid><description>Spice Up Your Life Python üêç I&amp;rsquo;m currently working on a side project that I&amp;rsquo;ve written in Python. Now I&amp;rsquo;ve have a lot of experience with Python before, I used it primarily to write a load of scripts for automating processes for when Bash didn&amp;rsquo;t quite cut it. Don&amp;rsquo;t get me wrong Bash is great, but like for every other language out there, each has its purpose in the world.</description></item><item><title>Extending Gotests for Strict Error Tests</title><link>https://jdheyburn.co.uk/posts/extending-gotests-for-strict-error-tests/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/posts/extending-gotests-for-strict-error-tests/</guid><description>Strict Error Tests in Java I love confirming the stability of my code through writing tests and practicing Test-driven development (TDD). For Java, JUnit was my preferred testing framework of choice. When writing tests to confirm an exception had been thrown, I used the optional parameter expected for the annotation @Test, however I quickly found that this solution would not work for methods where I raised the same exception class multiple times for different error messages, and testing on those messages.</description></item><item><title>Blog Bootstrap</title><link>https://jdheyburn.co.uk/posts/blog-bootstrap/</link><pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/posts/blog-bootstrap/</guid><description>Howdy! üëã This site will be an area for me to braindump everything and anything that comes across my mind - although I&amp;rsquo;ll try my best to keep it tech-focused!
The blog platform itself is pretty basic. It is built using Hugo, hosted using GitHub Pages, while served over a custom domain via CloudFlare. While this isn&amp;rsquo;t exactly anything to brag about, it is only meant to be a quick and easy platform to spin up and get hosted so that I can focus on what really matters&amp;hellip; the content!</description></item></channel></rss>