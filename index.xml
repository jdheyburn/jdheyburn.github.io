<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JDHeyburn</title><link>https://jdheyburn.co.uk/</link><description>Recent content on JDHeyburn</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 31 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://jdheyburn.co.uk/index.xml" rel="self" type="application/rss+xml"/><item><title>Who Goes Blogging 4: Content Structure &amp; Refactoring</title><link>https://jdheyburn.co.uk/blog/who-goes-blogging-4-content-structure-and-refactoring/</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/who-goes-blogging-4-content-structure-and-refactoring/</guid><description>So far in this series we&amp;rsquo;ve been looking at the infrastructure behind the Hugo website, but I haven&amp;rsquo;t looked into improving the content layout of the site. Some of the improvements I want to make are:
Moving content articles from a flat structure to a leaf bundle Rename content section to blog from posts Upgrading hugo-coder theme and hugo version Adding a table of contents to the pages &amp;hellip; and further improvements as I find them This post will cover items 1-2, the others will be in a follow up post.</description></item><item><title>Who Goes Blogging 3.2: Deployment Methods - GitHub Actions</title><link>https://jdheyburn.co.uk/blog/who-goes-blogging-3-2-deployment-methods-github-actions/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/who-goes-blogging-3-2-deployment-methods-github-actions/</guid><description>From TravisCI to GitHub Actions In the previous post we looked at moving to a CI/CD model by moving from the deploy.sh script to TravisCI.
In this post we will look at how we can migrate from TravisCI to GitHub Actions, GitHub&amp;rsquo;s own CI/CD tool.
This post will also be useful if you are looking to onboard GitHub Actions as your CI/CD pipeline! üöÄ
Benefits ‚úÖ Let&amp;rsquo;s talk about why we want to migrate away from TravisCI in the first place.</description></item><item><title>Who Goes Blogging 3.1: Deployment Methods - TravisCI</title><link>https://jdheyburn.co.uk/blog/who-goes-blogging-3-1-deployment-methods-travisci/</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/who-goes-blogging-3-1-deployment-methods-travisci/</guid><description>Recap Since part 1, we have been using a simple bash script called deploy.sh to build our Hugo website and upload it to our GitHub Pages repo. In part 2 we modified it slightly to include the CNAME file post-build to ensure GitHub Pages uses the custom domain we set up in that same part.
For this part, I will tell you about how I migrated from deploying via a script, to a CI/CD tool - namely TravisCI.</description></item><item><title>On Becoming An Open Source Software Contributor</title><link>https://jdheyburn.co.uk/blog/on-becoming-an-open-source-software-contributor/</link><pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/on-becoming-an-open-source-software-contributor/</guid><description>This is going to be a relatively shorter post that&amp;rsquo;ll be in two parts since it&amp;rsquo;s more of a self-promotion&amp;hellip; But as of this Friday just gone, I finally had a pull request approved to be merged to terraform&amp;ndash;provider-aws!
Okay so it&amp;rsquo;s only a small piece of documentation, I&amp;rsquo;ve actually got another larger PR waiting to be merged in to the same project with new added functionality - and a bug fix in the pipeline too - which I hope to talk about in the future at some point.</description></item><item><title>Who Goes Blogging 2: Custom Domain</title><link>https://jdheyburn.co.uk/blog/who-goes-blogging-2-custom-domain/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/who-goes-blogging-2-custom-domain/</guid><description>In the previous post, we got ourselves up and running with a website generated by Hugo, deployed to GitHub, and hosted by GitHub Pages.
Now, we&amp;rsquo;re going to add a custom domain to our website so that we hide the &amp;lt;username&amp;gt;.github.io domain that GitHub Pages is kindly hosting for us for free.
At the same time, we&amp;rsquo;re going to make our website blazingly fast for users by adding a caching layer with a content distribution network (CDN).</description></item><item><title>Who Goes Blogging 1: Getting Started</title><link>https://jdheyburn.co.uk/blog/who-goes-blogging-1-getting-started/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/who-goes-blogging-1-getting-started/</guid><description>I&amp;rsquo;ve done a lot of talking about how this website is currently, but let&amp;rsquo;s talk about how you can get set up with the same as I have done here. Let&amp;rsquo;s recap exactly what that is:
A GitHub repo with the site source code Another GitHub project with the rendered site Hosted on GitHub Pages Fronted by a custom domain Globally cached by a CDN Redirecting multiple domains We&amp;rsquo;ll cover the first three points in this post, with the remainder to come in a follow up post.</description></item><item><title>Who Goes Blogging 0: Applying Cartography</title><link>https://jdheyburn.co.uk/blog/who-goes-blogging-0-applying-cartography/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/who-goes-blogging-0-applying-cartography/</guid><description>Applying Cartography With my academic background focused in infrastructure, I love seeing diagrams of topologies - they&amp;rsquo;re a pretty damn useful way of understanding architecture of an application flow amongst other things. Let&amp;rsquo;s take a look at how my portfolio site is architected out.
As I mentioned in my first blog post - I&amp;rsquo;ve got several ideas on how I can improve on the architecture of this site. But what good is evaluating where you&amp;rsquo;ve come from if you don&amp;rsquo;t document what you currently have?</description></item><item><title>Three Ways To Spice Up Your Python Code</title><link>https://jdheyburn.co.uk/blog/three-ways-to-spice-up-your-python-code/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/three-ways-to-spice-up-your-python-code/</guid><description>Spice Up Your Life Python üêç I&amp;rsquo;m currently working on a side project that I&amp;rsquo;ve written in Python. Now I&amp;rsquo;ve have a lot of experience with Python before, I used it primarily to write a load of scripts for automating processes for when Bash didn&amp;rsquo;t quite cut it. Don&amp;rsquo;t get me wrong Bash is great, but like for every other language out there, each has its purpose in the world.</description></item><item><title>Extending Gotests for Strict Error Tests</title><link>https://jdheyburn.co.uk/blog/extending-gotests-for-strict-error-tests/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/extending-gotests-for-strict-error-tests/</guid><description>Strict Error Tests in Java I love confirming the stability of my code through writing tests and practicing Test-driven development (TDD). For Java, JUnit was my preferred testing framework of choice. When writing tests to confirm an exception had been thrown, I used the optional parameter expected for the annotation @Test, however I quickly found that this solution would not work for methods where I raised the same exception class multiple times for different error messages, and testing on those messages.</description></item><item><title>Blog Bootstrap</title><link>https://jdheyburn.co.uk/blog/blog-bootstrap/</link><pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/blog/blog-bootstrap/</guid><description>Howdy! üëã
This site will be an area for me to braindump everything and anything that comes across my mind - although I&amp;rsquo;ll try my best to keep it tech-focused!
The blog platform itself is pretty basic. It is built using Hugo, hosted using GitHub Pages, while served over a custom domain via CloudFlare. While this isn&amp;rsquo;t exactly anything to brag about, it is only meant to be a quick and easy platform to spin up and get hosted so that I can focus on what really matters&amp;hellip; the content!</description></item><item><title>Contact</title><link>https://jdheyburn.co.uk/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jdheyburn.co.uk/contact/</guid><description>If you wish to get in touch - reach me via @jdheyburn.</description></item></channel></rss>